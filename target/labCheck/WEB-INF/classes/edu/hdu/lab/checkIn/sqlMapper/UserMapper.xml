<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.checkIn.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="edu.hdu.lab.checkIn.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="pwd" property="pwd" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="phonecode" property="phonecode" jdbcType="VARCHAR" />
		<result column="address_id" property="addressId" jdbcType="INTEGER" />
		<result column="role" property="role" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, userName, pwd, name, phonecode, address_id, role
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="edu.hdu.lab.checkIn.model.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="edu.hdu.lab.checkIn.model.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="edu.hdu.lab.checkIn.model.User">
		insert into user (id, userName, pwd,
		name, phonecode, address_id,
		role)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{phonecode,jdbcType=VARCHAR}, #{addressId,jdbcType=INTEGER},
		#{role,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="edu.hdu.lab.checkIn.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="pwd != null">
				pwd,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="phonecode != null">
				phonecode,
			</if>
			<if test="addressId != null">
				address_id,
			</if>
			<if test="role != null">
				role,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="phonecode != null">
				#{phonecode,jdbcType=VARCHAR},
			</if>
			<if test="addressId != null">
				#{addressId,jdbcType=INTEGER},
			</if>
			<if test="role != null">
				#{role,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="edu.hdu.lab.checkIn.model.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				userName = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.pwd != null">
				pwd = #{record.pwd,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.phonecode != null">
				phonecode = #{record.phonecode,jdbcType=VARCHAR},
			</if>
			<if test="record.addressId != null">
				address_id = #{record.addressId,jdbcType=INTEGER},
			</if>
			<if test="record.role != null">
				role = #{record.role,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=INTEGER},
		userName = #{record.username,jdbcType=VARCHAR},
		pwd = #{record.pwd,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		phonecode = #{record.phonecode,jdbcType=VARCHAR},
		address_id = #{record.addressId,jdbcType=INTEGER},
		role = #{record.role,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.checkIn.model.User">
		update user
		<set>
			<if test="username != null">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="phonecode != null">
				phonecode = #{phonecode,jdbcType=VARCHAR},
			</if>
			<if test="addressId != null">
				address_id = #{addressId,jdbcType=INTEGER},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="edu.hdu.lab.checkIn.model.User">
		update user
		set userName = #{username,jdbcType=VARCHAR},
		pwd = #{pwd,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		phonecode = #{phonecode,jdbcType=VARCHAR},
		address_id = #{addressId,jdbcType=INTEGER},
		role = #{role,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--user deinfed sql maps -->
	<select id="getUsersByParams" parameterType="edu.hdu.lab.checkIn.model.User"
		resultMap="BaseResultMap">
		select * from user
		<where>
			<if test="username != null">
				AND userName = #{username,jdbcType=VARCHAR}
			</if>
			<if test="pwd != null">
				AND pwd = #{pwd,jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				AND name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="phonecode != null">
				AND phonecode = #{phonecode,jdbcType=VARCHAR}
			</if>
			<if test="addressId != null">
				AND address_id = #{addressId,jdbcType=INTEGER}
			</if>
			<if test="role != null">
				AND role = #{role,jdbcType=INTEGER}
			</if>
		</where>
	</select>

</mapper>